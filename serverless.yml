service: templante-api

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: ${opt:stage}
  region: ${opt:region}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:DeleteItem
          Resource:
            Fn::Join:
              - ':'
              - - 'arn:aws:dynamodb'
                - Ref: 'AWS::Region'
                - Ref: 'AWS::AccountId'
                - 'table/Users'

plugins:
  - serverless-offline

functions:
  getUsers:
    handler: infraestructure/handlers/userHandler.getUsers
    events:
      - http:
          path: user       # https://dominio.fulanito/{stage}/user
          method: get
  createUser:
    handler: infraestructure/handlers/userHandler.createUser
    events:
      - http:
          path: user       # https://dominio.fulanito/{stage}/user
          method: post
          request:
            schemas:
              application/json: ${file(infraestructure/handlers/schemas/userSchema.json)}
  updateUser:
    handler: infraestructure/handlers/userHandler.updateUser
    events:
      - http:
          path: user/{id}       # https://dominio.fulanito/{stage}/user/{id}
          method: put
          request:
            schemas:
              application/json: ${file(infraestructure/handlers/schemas/userSchema.json)}
  deleteUser:
    handler: infraestructure/handlers/userHandler.deleteUser
    events:
      - http:
          path: user/{id}       # https://dominio.fulanito/{stage}/user/{id}
          method: delete
  getDetailUser:
    handler: infraestructure/handlers/userHandler.getDetailUser
    events:
      - http:
          path: user/{id}       # https://dominio.fulanito/{stage}/user/{id}
          method: get
  